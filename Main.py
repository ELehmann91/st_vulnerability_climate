import streamlit as st
import pandas as pd
import plotly.express as px
import json

st.set_page_config(layout="wide")

st.markdown("""
# Vulnerabilities in Climate Policy â€“ Who is living up to their promises? 
---
The consequences of the climate crisis are affecting people across the world. Still, it is well-known that people in vulnerable situations (due to factors including but not limited to age, gender, geography, health or indigenous or minority status) may experience heightened exposure and are disproportionately more affected than other demographic groups. 
---
""")            
st.markdown("|   Group |	Vulnerability Type |")
st.markdown("| Women and other genders	| Gender|")
st.markdown("| Sexual minorities (LGBTQI+) 	| Gender|")
st.markdown("| Children and Youth |	Age |")
st.markdown("| Older persons|	Age|")
st.markdown("| Ethnic, racial or other minorities | Socio-economic |")
st.markdown("| Members of indigenous or local communities|	Socio-economic|")
st.markdown("| Migrants and displaced persons|	Socio-economic|")
st.markdown("| Persons living in poverty|	Socio-economic|")
st.markdown("| Informal sector workers|	Occupation|")
st.markdown("| Fishery communities|	Occupation|")
st.markdown("| Agricultural communities|	Occupation|")
st.markdown("| Persons with disabilities|	Health")
st.markdown("|	Persons with pre-existing health conditions|	Health|")
st.markdown("|	Residents of drought-prone regions| 	Geographic|")
st.markdown("|	Rural populations	|Geographic|")
st.markdown("|	Urban populations	|Geographic|")
st.markdown("|	Coastal Communities	|Geographic|")


st.title("Vulnerability of African Countries")
st.info("Hover over the map to see the names of the states and their population")

df = pd.read_csv('data/vul_africa_01_hc.csv',sep=";")

col1,col2= st.columns(2)

fig = px.choropleth(df, scope = 'africa',
                    color="year",
                    locations="code3", 
                    hover_name = 'Country',
                    hover_data=['pages','Gender','Age','Socio-economic','Occupation','Health','Geographic'],
                    color_continuous_scale="Purples",
                    range_color=(2015, 2024),
                    fitbounds = 'locations',
                    template = 'plotly',
                    title = "Mentions of groups in vulnerable situations"
                   )

col1.plotly_chart(fig)



# Assuming 'Country' column contains country names and 'Code3' contains country codes
if not df.empty:
    # Create a dictionary mapping from country names to country codes for the dropdown
    country_to_code = df.drop_duplicates(subset=['Country', 'code3']).set_index('Country')['code3'].to_dict()
    # Let the user select a country name
    selected_country = col2.selectbox("Select a country:", options=sorted(country_to_code.keys()))
    
    # Filter the DataFrame by the selected country's code
    selected_code = country_to_code[selected_country]
    filtered_df = df[df['code3'] == selected_code]
    
    # Check if there are summaries for the selected country and display
    if not filtered_df['sum_Urban populations'].empty:
        # For simplicity, displaying the first summary found for the selected country
        col2.write("Urban Populations Summary:")
        col2.write(filtered_df['sum_Urban populations'].iloc[0])
    elif not filtered_df['sum_Urban populations'].empty:
        col2.write("Rural Populations Summary:")
        col2.write(filtered_df['sum_Rural populations'].iloc[0])
    else:
        
        col2.write(f"No summary available for {selected_country}.")
else:
    col2.write("No data available.")



