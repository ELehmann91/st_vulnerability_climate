import streamlit as st
import pandas as pd
import plotly.express as px
import json

st.set_page_config(layout="wide")

st.title("Vulnerability of African Countries")
st.info("Hover over the map to see the names of the states and their population")

df = pd.read_csv('data/vul_africa_01_hc.csv',sep=";")

col1,col2= st.columns(2)

fig = px.choropleth(df, scope = 'africa',
                    color="year",
                    locations="code3", 
                    hover_name = 'Country',
                    hover_data=['pages','Gender','Age','Socio-economic','Occupation','Health','Geographic'],
                    color_continuous_scale="Purples",
                    range_color=(2015, 2024),
                    fitbounds = 'locations',
                    template = 'plotly',
                    title = "Mentions of groups in vulnerable situations"
                   )

col1.plotly_chart(fig)



# Assuming 'Country' column contains country names and 'Code3' contains country codes
if not df.empty:
    # Create a dictionary mapping from country names to country codes for the dropdown
    country_to_code = df.drop_duplicates(subset=['Country', 'code3']).set_index('Country')['code3'].to_dict()
    # Let the user select a country name
    selected_country = col2.selectbox("Select a country:", options=sorted(country_to_code.keys()))
    
    # Filter the DataFrame by the selected country's code
    selected_code = country_to_code[selected_country]
    filtered_df = df[df['code3'] == selected_code]
    
    # Check if there are summaries for the selected country and display
    if not filtered_df['sum_Urban populations'].empty:
        # For simplicity, displaying the first summary found for the selected country
        col2.write("Urban Populations Summary:")
        col2.write(filtered_df['sum_Urban populations'].iloc[0])
    elif not filtered_df['sum_Urban populations'].empty:
        col2.write("Rural Populations Summary:")
        col2.write(filtered_df['sum_Rural populations'].iloc[0])
    else:
        
        col2.write(f"No summary available for {selected_country}.")
else:
    col2.write("No data available.")


# To print the first summary in col2
#if not df['summary_a'].empty:
#    col2.write('AGO')
#    col2.write(df['summary_a'].iloc[1])
#else:
#    col2.write("No summary available.")
